#Workflow name
name: CI/CD Pipeline
on:
  #Manually trigger workflow runs
  workflow_dispatch:
  #Trigger the workflow on push from the main branch
  push:
    branches:
      - Dev-Back
jobs:
  #Test's job
  # tests:
  #   name: Unit tests
  #   #Run on Ubuntu using the latest version
  #   runs-on: ubuntu-latest
  #   #Job's steps
  #   steps:
  #     #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
  #     - uses: actions/checkout@v2
  #     #Set up JDK 11
  #     - name: Set up JDK
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: '17'
  #     #Set up Maven cache
  #     - name: Cache Maven packages
  #       #This action allows caching dependencies and build outputs to improve workflow execution time.
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.m2
  #         key: ${{ runner.os }}-m2-${{ hashFiles('agro-plantation-app/pom.xml') }}
  #         restore-keys: ${{ runner.os }}-m2
  #     #Run Tests
  #     - name: Run Tests
  #       run: mvn -B test agro-plantation-app\pom.xml

  #Sonar's Job
  sonar:
    #Depends on test's job
    #needs: tests
    name: SonarCloud analysis
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v2
      #Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      #Set up SonarCloud cache
      - name: Cache SonarCloud packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('agro-plantation-app/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Analyze project with SonarCloud
      - name: Analyze with SonarCloud
        run: mvn -B verify -DskipTests=true sonar:sonar -Dsonar.projectKey=Mgll3_agro-plantation-app  -Dsonar.organization=mgll3 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN --file agro-plantation-app/pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #Build's job
  
  #build:
    #Depends on sonar's job
    #needs: sonar
    #name: Build
    #Run on Ubuntu using the latest version
    #runs-on: ubuntu-latest
    #steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      #- uses: actions/checkout@v2
      #Set up JDK 17
      #- name: Set up JDK
      #  uses: actions/setup-java@v2
      #  with:
      #    java-version: '17'
      #Set up Maven cache
      #- name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        #uses: actions/cache@v2
        #with:
          #path: ~/.m2
          #key: ${{ runner.os }}-m2-${{ hashFiles('agro-plantation-app/pom.xml') }}
          #restore-keys: ${{ runner.os }}-m2
      #Build the application using Maven
      #- name: Build with Maven
      #  run: mvn -B package -DskipTests --file agro-plantation-app/pom.xml
      #Build the application using Maven
      #- name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
        #uses: actions/upload-artifact@v2
        #with:
          #Set artifact name
          #name: artifact
          #From this path
          #path: target/agro-plantation-app-0.0.1-SNAPSHOT.jar
